create table random_points(id bigint generated by default as identity primary key, geom geometry(POINT, 3857));

with pts as (
    select st_transform((st_dump(ST_GeneratePoints(geom, 1000000))).geom, 3857)  as geom
    from (
        select st_makeenvelope(-125, 24, -67, 50, 4326) as geom
    ) AS s
)
insert into random_points (geom) select geom from pts;

create index random_points_geom_idx on random_points using gist(geom);

create or replace function public.nlcd(z integer, x integer, y integer) returns bytea
 language 'plpgsql'
    stable
    parallel safe   as
$$
declare
    result bytea;
begin
    with b as (
             select st_transform(st_tileenvelope(z, x, y), 102039) as geom),
         s as (
             select st_intersection(b.geom, n.rast) as geom
             from nlcd n
                      join b on st_intersects(b.geom, n.rast)),
         m as (
             select st_asmvtgeom(st_transform((s.geom).geom, 3857),
                               st_transform(b.geom, 3857)) as geom,
                    (s.geom).val
             from s,
                  b
             where (s.geom).geom && b.geom)
    select st_asmvt(m, 'public.nlcd')
    into result
    from m;

    return result;
end;
$$;

create or replace function public.openwater(z integer, x integer, y integer) returns bytea
 language 'plpgsql'
    stable
    parallel safe   as
$$
declare
    result bytea;
begin
    with b as (
             select st_tileenvelope(z, x, y) as geom),
         s as materialized (
             select n.id, st_transform(n.geom, 102039) as geom
             from random_points n
                      join b on st_intersects(b.geom, n.geom)),
         x as (
             select st_intersection(s.geom, n.rast) as geom
             from nlcd n
                 join s on st_intersects(s.geom, n.rast)),
         m as (
             select st_asmvtgeom(st_transform((x.geom).geom, 3857),
                               st_transform(b.geom, 3857)) as geom,
                    (x.geom).val
             from x,
                  b
             where (x.geom).geom && st_transform(b.geom, 102039) and (x.geom).val = 11)
    select st_asmvt(m, 'public.openwater')
    into result
    from m;

    return result;
end;
$$;